prg_comment = "che schifo"
prg_version = "0.7"
def program(prg, cmd):
    prg.add(0, "Initialize 0 TTL and Synchronize.sub")
    prg.add(0, "Initialize Experiment.sub", enable=False)
    prg.add(500, "Config Field OFF.sub")
    prg.add(1000000, "Optical Levit (+) Amp", 1000)
    prg.add(1500000, "Set MOT NaK.sub")
    prg.add(2000000, "Dark Spot MOT load.sub")
    prg.add(2100000, "Config MOT.sub")
    prg.add(2200000, "Pulse uw OFF")
    prg.add(2500000, "TTL Pinning ON", enable=False)
    prg.add(2500000, "TTL Pinning OFF")
    prg.add(2510000, "Pinning Lock", 0.0000)
    prg.add(125000000, "Synchronize.sub", enable=False)
    prg.add(130000000, "All Shutter Close 2017.sub")
    prg.add(130001490, "TTL2-12 ON")
    prg.add(130001500, "Config Field OFF.sub")
    prg.add(130004500, "MOT lights Off close.sub")
    prg.add(130005000, "Mirrors Imaging")
    prg.add(130006735, "Gray Molasses 2017")
    prg.add(130066735, "empty.sub")
    prg.add(130066735, "Loading_GM_Q50_MTC200A")
    prg.add(132191645, "B comp x", 920.0)
    prg.add(150000000, "Evaporation Ramp.sub")
    prg.add(587003000, "Decompress Current 200-50", start_t=0.0000, stop_x=50.000, n_points=300, start_x=200.000, stop_t=600.0000)
    prg.add(587010000, "Decompress Voltage 200-50", start_t=0.0000, stop_x=0.000, n_points=300, start_x=30.000, stop_t=600.0000)
    prg.add(664300000, "Picture uw feedback pinning")
    prg.add(694300000, "TTL2-12 OFF", functions=dict(time=lambda x: x + cmd.get_var('t'), funct_enable=False))
    prg.add(695300000, "empty.sub")
    prg.add(695311050, "Pinning Lock", 0.0000)
    prg.add(695311050, "Pinning Lock ramp", start_t=0, stop_x=0, n_points=500, start_x=3, stop_t=600, enable=False)
    prg.add(695311050, "empty.sub")
    prg.add(695311100, "TTL Pinning OFF")
    prg.add(695312100, "Pulse uw ON", enable=False)
    prg.add(695312120, "Pulse uw OFF", functions=dict(time=lambda x: x + 1e-3*cmd.get_var('dt'), funct_enable=False), enable=False)
    prg.add(695313120, "Config Field OFF.sub", functions=dict(time=lambda x: x + 1e-3*cmd.get_var('dt'), funct_enable=False))
    prg.add(695313120, "Picture Levit 2017 - 20ms", enable=False)
    prg.add(695313120, "Picture Levit 2017 - 50ms", enable=False)
    prg.add(695313120, "Picture Levit 2017 - 100ms", enable=False)
    prg.add(695313120, "Picture Levit 2017 - 150ms", enable=False)
    prg.add(695313120, "Picture Levit 2017 - 180ms", enable=False)
    prg.add(695323120, "Picture NaK.sub")
    prg.add(695323120, "Picture NaK no Rep.sub", functions=dict(time=lambda x: x + 1e-3*cmd.get_var('dt'), funct_enable=False), enable=False)
    prg.add(695323120, "Picture NaK low repump 2017.sub", enable=False)
    prg.add(703323120, "TTL Pinning ON")
    prg.add(703423120, "Pinning Lock", 0.5000)
    prg.add(704423120, "Set MOT NaK.sub")
    prg.add(704923120, "Dark Spot MOT load.sub")
    prg.add(705023120, "Config MOT.sub")
    return prg
def commands(cmd):
    import numpy as np
    iters = np.arange(130, 200, 10)
    j = 0
    while(cmd.running):
        dt1 = iters[j]
        cmd.set_var('dt', dt1)
        print('\n-------o-------')
        print('Run #%d/%d, with variables:\ndt = %g\n'%(j+1, len(iters), dt1))
        cmd.run(wait_end=True, add_time=100)
        j += 1
        if j == len(iters):
            cmd.stop()
    return cmd
